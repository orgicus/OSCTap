{"name":"OSCTap","tagline":"Basic float sharing over the network using Processing","body":"What is OSCTap\r\n==============\r\n\r\nOSCTap is a small utility that makes it simpler to floating point data over the network using the OSC protocol.\r\n\r\nThe library automatically scans ```public float``` variables defined in the sketch:\r\n * makes them available over OSC as server (sender/host)\r\n * makes it easy to map local variables with remote variables as a client (receiver/client)\r\n\r\nUsage\r\n=====\r\n\r\nCheck out the [basic usage demo](https://github.com/orgicus/OSCTap/raw/master/web/OSCTapDemo.mov)\r\n\r\nAdditionally see the Sender/Receiver.\r\n\r\nMinimal Sender, continuosly sending a value:\r\n\r\n```java\r\nimport oscP5.*;\r\nimport tap.osc.OSCSender;\r\n\r\npublic float x = 0;\r\nOSCSender s;\r\n\r\nvoid setup(){\r\n  size(400,400);\r\n  s = new OSCSender(this);\r\n}\r\nvoid draw(){\r\n  x = constrain((float)mouseX/width,0.0,1.0);\r\n  s.send(true);\r\n  background(x * 255);\r\n}\r\n```\r\nReceiver:\r\n```\r\nimport oscP5.*;\r\nimport tap.osc.OSCReceiver;\r\n\r\npublic float y = 0;\r\nOSCReceiver r;\r\n\r\nvoid setup(){\r\n  size(400,400);\r\n  r = new OSCReceiver(this);\r\n}\r\nvoid draw(){\r\n  background(255);\r\n  ellipse(width * .5, y * height, 10,10);\r\n}\r\n```\r\n\r\nHow does it work\r\n================\r\n\r\nInitial messaging works by broadcasting across all IPs.\r\nNo need to worry about IPs at this stage, but this isn't efficient\r\nso it's only used when searching for hosts/sender instances accross the network.\r\n\r\nCurrently the focus is simply sending a float variable.\r\nEach message however contains three arguments, the 2nd argument being the actual value.\r\n\r\nBased on [Alois Yang](http://aloisyang.com)'s suggestion during the [Gen-AV hackathon](http://gen-av.org), \r\nwe explored the idea of sharing data from Processing to other audio software \r\nusing [OSCulator to bridge OSC to MIDI](http://cote.cc/blog/using-osculator-as-an-osc-to-midi-bridge)\r\n\r\nI realise the limitation of float values, but for now let's imagine as a creative constraint :)\r\nA bit of R&D into OSC/MIDI in between is next.\r\n\r\nDependencies\r\n============\r\nOSCTap relies on the oscP5 library.\r\nThe [releases](https://github.com/orgicus/OSCTap/releases) page contains version of the library with or without oscP5\r\nIf you already have oscP5, use the release without oscP5 and be sure import oscP5 in sketches using OSCTap.\r\n\r\nCaveats\r\n=======\r\nThis library is in a draft stage at the moment\r\n(read as 'buggy'/rough on the edges)\r\nDocumentation and more examples will follow.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}